- name: Install Java and wget
  yum:
    name: java-1.8.0-openjdk.x86_64,wget
    state: present

- name: Create Nexus directories
  file:
    path: "/opt/nexus"
    state: directory
  become: true

- name: Create temporary Nexus directory
  file:
    path: "/tmp/nexus"
    state: directory
  become: true

- name: Download Nexus tarball
  get_url:
    url: "https://download.sonatype.com/nexus/3/latest-unix.tar.gz"
    dest: /tmp/nexus/nexus.tar.gz

- name: Extract Nexus files
  ansible.builtin.unarchive:
    src: /tmp/nexus/nexus.tar.gz
    dest: /tmp/nexus
    remote_src: yes

- name: Set ENV's
  become: true
  shell: |
    cd /tmp/nexus/
    export EXTOUT=$(sudo tar xzvf nexus.tar.gz 2>/dev/null | head -n1 | cut -d '/' -f1)
    echo "EXTOUT=$EXTOUT" >> /etc/environment

- name: Set Nexus Dir
  become: true
  shell: |
    cd /tmp/nexus/
    export NEXUSDIR=$(echo $EXTOUT | cut -d '/' -f1)
    echo "NEXUSDIR=$NEXUSDIR" >> /etc/environment
    echo $NEXUSDIR
  register: nexusdir_output

- name: Remove Nexus tar.gz file
  file:
    path: "/tmp/nexus/nexus.tar.gz"
    state: absent
  become: true

- name: Sync Nexus files
  shell: rsync -avzh /tmp/nexus/ /opt/nexus/
  become: true

- name: Create Nexus user
  user:
    name: "{{ nexus_user }}"
  become: true

- name: Set ownership for Nexus directories
  file:
    path: "/opt/nexus"
    owner: "{{ nexus_user }}"
    group: "{{ nexus_user }}"
    recurse: yes
  become: true

- name: Create Nexus service
  copy:
    dest: "/etc/systemd/system/{{ nexus_service_name }}.service"
    content: |
      [Unit]
      Description=nexus service
      After=network.target

      [Service]
      Type=forking
      LimitNOFILE=65536
      ExecStart=/opt/nexus/{{ nexusdir_output.stdout }}/bin/nexus start                                  
      ExecStop=/opt/nexus/{{ nexusdir_output.stdout }}/bin/nexus stop   
      User=nexus
      Restart=on-abort

      [Install]
      WantedBy=multi-user.target
  become: true

- name: Create Nexus rc file
  shell: echo 'run_as_user="nexus"' > "/opt/nexus/$NEXUSDIR/bin/nexus.rc"
  become: true

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  become: true

- name: Start Nexus service
  systemd:
    name: "{{ nexus_service_name }}"
    state: started
    enabled: yes
  become: true